
if(isLibrary.toBoolean()){
    apply plugin: 'com.android.library'
}else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
def cfg = rootProject.ext.android
def libraries =rootProject.ext.dependencies
android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion


    defaultConfig {
        if(!isLibrary.toBoolean()){
            applicationId "com.huangshang.bluetoothlib"
        }
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        pro{}
    }
    resourcePrefix "bluetoothlib_"
    sourceSets{
        main{
            if(isLibrary.toBoolean()){
                manifest.srcFile('src/main/AndroidManifest.xml')
                //集成开发模式下排除debug文件夹中的所有Java文件
                java{
                    exclude 'debug/**'
                }
            }else {
                manifest.srcFile('src/main/module/AndroidManifest.xml')
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation libraries.junit
    androidTestImplementation libraries.runner
    androidTestImplementation libraries.espresso_core

    implementation project(':common')
    kapt libraries.arouter_compiler
    kapt libraries.room_compiler
}
