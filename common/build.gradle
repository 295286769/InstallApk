apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
def cfg = rootProject.ext.android
def libraries =rootProject.ext.dependencies
android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion


    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        pro{

        }
    }

    resourcePrefix "common_"

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar','*.aar'])

    testImplementation libraries.junit
    androidTestImplementation libraries.runner
    androidTestImplementation libraries.espresso_core
    api libraries.kotlin_stdlib_jdk7
    api libraries.appcompat
    api libraries.core_ktx
    api libraries.constraintlayout
    api libraries.common_java8
    api libraries.lifecycle_extensions
    api libraries.room_runtime
    kapt libraries.room_compiler
    api libraries.eventbus
    api libraries.arouter_api
    api libraries.retrofit2
    api libraries.gson
    api libraries.rxjava
    api libraries.rxandroid
    api libraries.adapter_rxjava2
    kapt libraries.arouter_compiler

}
